<project name="se.llbit.chunky.nbt" default="build">

	<property name="debug"			value="false"/>
	<property name="src.dir"		location="src"/>
	<property name="bin.dir"		location="bin"/>
	<property name="tools.dir"		location="tools"/>
	<property name="nbt.package"	value="se.llbit.nbt"/>

	<property file="${src.dir}/main/res/Version.properties" prefix="Chunky"/>

	<taskdef name="jastadd" classname="jastadd.JastAddTask" classpath="${tools.dir}/jastadd2.jar"/>

	<target name="clean">
		<delete dir="${bin.dir}"/>
		<delete dir="${src.dir}/gen">
			<exclude name="**/test/*"/>
		</delete>
		<delete file="build/Chunky.jar" />
		<delete file="build/Chunky.app" />
		<delete file="build/Chunky.dmg" />
	</target>

	<target name="gen" depends="update-version-string">
		<mkdir dir="${src.dir}/gen/java"/>
		<jastadd
			outdir="${src.dir}/gen/java"
			package="${nbt.package}"
			rewrite="false"
			novisitcheck="false"
			debug="false">
			<fileset dir="${src.dir}/main/jastadd">
				<include name="*.ast"/>
				<include name="*.jrag"/>
				<include name="*.jadd"/>
			</fileset>
		</jastadd>
		<mkdir dir="${bin.dir}"/>
		<copy todir="${bin.dir}">
			<fileset dir="${src.dir}/main/res" />
		</copy>
	</target>

	<target name="build" depends="gen">
		<mkdir dir="${bin.dir}"/>
		<javac
			encoding="utf-8"
			source="1.6"
			target="1.6"
			debug="${debug}"
			nowarn="true"
			destdir="${bin.dir}"
			includes="**/*.java"
			includeantruntime="false">
			<classpath>
				<pathelement path="lib/log4j-1.2.17.jar"/>
				<pathelement path="lib/beaver-rt.jar"/>
				<pathelement path="lib/j99.jar"/>
				<pathelement path="lib/JOCL-0.1.7.jar"/>
				<pathelement path="lib/commons-math3-3.2.jar"/>
			</classpath>
			<src path="${src.dir}/main/java"/>
			<src path="${src.dir}/gen/java"/>
		</javac>
	</target>

	<target name="jar" depends="build"
		description="builds Chunky and creates build/Chunky.jar">
		<mkdir dir="build"/>
		<!--jar destfile="build/NBTDump.jar">
			<fileset dir="${bin.dir}" includes="se/llbit/nbt/*.class" />
			<fileset dir="${bin.dir}" includes="se/llbit/nbt/test/NBTDump.class" />
			<manifest>
				<attribute name="Main-Class" value="se.llbit.nbt.test.NBTDump" />
			</manifest>
		</jar-->
		<mkdir dir="${bin.dir}/lib"/>
		<jar destfile="${bin.dir}/lib/ChunkyCore.jar">
			<fileset dir="${bin.dir}">
				<exclude name="lib/**/*"/>
				<exclude name="se/llbit/chunky/launcher/**/*"/>
			</fileset>
		</jar>
		<jar destfile="build/Chunky.jar">
			<fileset dir="${bin.dir}">
				<include name="lib/**/*"/>
				<include name="se/llbit/chunky/launcher/**/*"/>
			</fileset>
			<fileset dir=".">
				<include name="lib/**/*"/>
			</fileset>
			<manifest>
				<attribute name="Main-Class"
					value="se.llbit.chunky.launcher.ChunkyLauncher" />
			</manifest>
		</jar>
	</target>

	<target name="run" depends="jar">
		<java fork="true" classpath="build/Chunky.jar"
			classname="se.llbit.chunky.launcher.ChunkyLauncher"/>
	</target>
	
	<target name="clean-builds" description="Removes the build folder">
		<delete dir="build"/>
	</target>

	<target name="gendoc">
		<mkdir dir="build"/>
		<exec executable="perl" failonerror="true"
			output="build/ReadMe.html">
			<arg value="${tools.dir}/Markdown.pl"/>
			<arg value="README.md"/>
		</exec>
	</target>

	<target name="tarball" description="Create a source tarball">
		<mkdir dir="${basedir}/build"/>
		<exec executable="git">
			<arg value="archive"/>
			<arg value="--prefix=&quot;chunky-${Chunky.version}&quot;"/>
			<arg value="-o"/>
			<arg value="${basedir}/build/chunky-${Chunky.version}.tar.gz"/>
			<arg value="master"/>
		</exec>
	</target>
	
	<target name="release" description="build a release">
		<antcall target="clean"/>
		<antcall target="tarball"/>
		<antcall target="jar"/>
		<antcall target="gendoc"/>
		<zip destfile="build/Chunky-${Chunky.version}.zip">
			<zipfileset dir="." prefix="Chunky-${Chunky.version}">
				<include name="ChangeLog.txt"/>
				<include name="Chunky.bat"/>
				<include name="Chunky.sh"/>
			</zipfileset>
			<zipfileset dir="license" prefix="Chunky-${Chunky.version}/license">
				<include name="LICENSE.txt"/>
				<include name="JOCL.txt"/>
				<include name="MWC64X.txt"/>
				<include name="NOTICE.txt"/>
				<include name="LOG4J.txt"/>
				<include name="Markdown"/>
			</zipfileset>
			<zipfileset dir="build" prefix="Chunky-${Chunky.version}">
				<include name="Chunky.jar"/>
				<include name="ReadMe.html"/>
			</zipfileset>
		</zip>
		<copy file="win/Chunky.nsi.templ" toFile="win/Chunky.nsi"
			overwrite="true">
			<filterset>
				<filter token="VERSION" value="${Chunky.version}"/>
			</filterset>
		</copy>
	</target>

	<target name="macapp" description="Create an .app package for Chunky">
		<property name="Chunky.app" value="build"/>
		<property name="app.name" value="Chunky"/>
		<property name="macosx.resrc" value="Resources"/>
		<property name="app.resrc" value="${src.dir}/main/res"/>
		<property name="macosx.stubfile" value="${macosx.resrc}/JavaApplicationStub"/>
		<taskdef name="jarbundler" classname="net.sourceforge.jarbundler.JarBundler"/>
		<jarbundler dir="."
				name="${app.name}"
				bundleid="se.llbit.chunky"
				shortname="${app.name}"
				version="${version}"
				mainclass="se.llbit.chunky.launcher.ChunkyLauncher"
				icon="${macosx.resrc}/chunky.icns"
				infostring="${app.name}"
				stubfile="${macosx.stubfile}"
				workingdirectory="$APP_PACKAGE/Contents/Resources/Java"
				vmoptions="-Xms512m -Xmx2048m">
			<javaproperty name="apple.laf.useScreenMenuBar" value="true"/>
			<javaproperty name="apple.awt.textantialiasing" value="true" />
			<resourcefileset dir="${app.resrc}">
				<include name="chunky.icns" />
			</resourcefileset>
			<jarfileset dir="build">
				<include name="Chunky.jar"/>
			</jarfileset>	
		</jarbundler>
	</target>
	
	<target name="macdmg" description="Create a DMG package for Chunky">
		<property name="mountdir" value="/tmp"/>
		<exec executable="/usr/bin/hdiutil" os="Mac OS X" failonerror="true">
			<arg value="create"/>
			<arg value="-srcfolder"/>
			<arg value="Chunky.app"/>
			<arg value="-volname"/>
			<arg value="Chunky"/>
			<arg value="-ov"/>
			<arg value="build/Chunky-tmp.dmg"/>
			<arg value="-format"/>
			<arg value="UDRW"/>
		</exec>
		<exec executable="/usr/bin/hdiutil" os="Mac OS X" failonerror="true">
			<arg value="attach"/>
			<arg value="build/Chunky-tmp.dmg"/>
			<arg value="-mountroot"/>
			<arg value="${mountdir}/"/>
		</exec>
		<mkdir dir="${mountdir}/Chunky/.background"/>
		<copy file="${src.dir}/main/res/chunky-dmg.png" tofile="${mountdir}/Chunky/.background/background.png" overwrite="true"/>
		<copy file="${src.dir}/main/res/chunky-dmg.icns" tofile="${mountdir}/Chunky/.VolumeIcon.icns" overwrite="true"/>
		<copy file="${src.dir}/main/res/DS_Store" tofile="${mountdir}/Chunky/.DS_Store" overwrite="true"/>
		<exec executable="/usr/bin/Setfile" os="Mac OS X">
			<arg value="-a"/>
			<arg value="C"/>
			<arg value="${mountdir}/Chunky"/>
		</exec>
		<symlink link="${mountdir}/Chunky" resource="/Applications"/>
		<exec executable="/usr/bin/hdiutil" os="Mac OS X" failonerror="true">
			<arg value="detach"/>
			<arg value="${mountdir}/Chunky"/>
		</exec>
		<delete file="${app.name}-tmp.dmg" quiet="yes" failonerror="false"/>
		<exec executable="/usr/bin/hdiutil" os="Mac OS X" failonerror="true">
			<arg value="convert"/>
			<arg value="build/Chunky-tmp.dmg"/>
			<arg value="-format"/>
			<arg value="UDZO"/>
			<arg value="-o"/>
			<arg value="build/Chunky-${Chunky.version}.dmg"/>
		</exec>
		<delete file="build/Chunky-tmp.dmg" />
		<exec executable="/usr/bin/hdiutil" os="Mac OS X" failonerror="true">
			<arg value="internet-enable"/>
			<arg value="-yes"/>
			<arg value="build/Chunky-${Chunky.version}.dmg"/>
		</exec>
	</target>

	<target name="mac" description="Create and Bundle Chunky for OS X">
		<antcall target="clean"/>
		<antcall target="jar"/>
		<antcall target="macapp"/>
		<antcall target="macdmg"/>
	</target>

	<target name="update-version-string">
		<echo message="Updating Chunky version string..."/>
		<exec executable="git" outputproperty="version"
			failifexecutionfails="false">
			<arg value="describe"/>
		</exec>
		<antcall target="-store-version-string"/>
	</target>

	<target name="-store-version-string" if="version">
		<echo message="version=${version}"/>
		<propertyfile file="${src.dir}/main/res/Version.properties">
			<entry key="version" value="${version}"/>
		</propertyfile>
		<exec executable="git">
			<arg value="update-index"/>
			<arg value="--assume-unchanged"/>
			<arg value="${src.dir}/main/res/Version.properties"/>
		</exec>
	</target>
</project>
